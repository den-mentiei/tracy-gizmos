/* automatically generated by rust-bindgen 0.69.1 */

pub type TracyPlotFormatEnum = ::std::os::raw::c_int;
pub type TracyCZoneCtx = ___tracy_c_zone_context;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ___tracy_source_location_data {
    pub name: *const ::std::os::raw::c_char,
    pub function: *const ::std::os::raw::c_char,
    pub file: *const ::std::os::raw::c_char,
    pub line: u32,
    pub color: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ___tracy_c_zone_context {
    pub id: u32,
    pub active: ::std::os::raw::c_int,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ___tracy_gpu_time_data {
    pub gpuTime: i64,
    pub queryId: u16,
    pub context: u8,
    pub __bindgen_padding_0: [u8; 5usize],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ___tracy_gpu_zone_begin_data {
    pub srcloc: u64,
    pub queryId: u16,
    pub context: u8,
    pub __bindgen_padding_0: [u8; 5usize],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ___tracy_gpu_zone_begin_callstack_data {
    pub srcloc: u64,
    pub depth: ::std::os::raw::c_int,
    pub queryId: u16,
    pub context: u8,
    pub __bindgen_padding_0: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ___tracy_gpu_zone_end_data {
    pub queryId: u16,
    pub context: u8,
    pub __bindgen_padding_0: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ___tracy_gpu_new_context_data {
    pub gpuTime: i64,
    pub period: f32,
    pub context: u8,
    pub flags: u8,
    pub type_: u8,
    pub __bindgen_padding_0: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ___tracy_gpu_context_name_data {
    pub context: u8,
    pub __bindgen_padding_0: [u8; 7usize],
    pub name: *const ::std::os::raw::c_char,
    pub len: u16,
    pub __bindgen_padding_1: [u8; 6usize],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ___tracy_gpu_calibration_data {
    pub gpuTime: i64,
    pub cpuDelta: i64,
    pub context: u8,
    pub __bindgen_padding_0: [u8; 7usize],
}
pub const TracyPlotFormatNumber: TracyPlotFormatEnum = 0;
pub const TracyPlotFormatMemory: TracyPlotFormatEnum = 1;
pub const TracyPlotFormatPercentage: TracyPlotFormatEnum = 2;
pub const TracyPlotFormatWatt: TracyPlotFormatEnum = 3;
extern "C" {
    pub fn ___tracy_set_thread_name(name: *const ::std::os::raw::c_char);
    pub fn ___tracy_startup_profiler();
    pub fn ___tracy_shutdown_profiler();
    pub fn ___tracy_alloc_srcloc(
        line: u32,
        source: *const ::std::os::raw::c_char,
        sourceSz: usize,
        function: *const ::std::os::raw::c_char,
        functionSz: usize,
    ) -> u64;
    pub fn ___tracy_alloc_srcloc_name(
        line: u32,
        source: *const ::std::os::raw::c_char,
        sourceSz: usize,
        function: *const ::std::os::raw::c_char,
        functionSz: usize,
        name: *const ::std::os::raw::c_char,
        nameSz: usize,
    ) -> u64;
    #[must_use]
    pub fn ___tracy_emit_zone_begin(
        srcloc: *const ___tracy_source_location_data,
        active: ::std::os::raw::c_int,
    ) -> TracyCZoneCtx;
    #[must_use]
    pub fn ___tracy_emit_zone_begin_callstack(
        srcloc: *const ___tracy_source_location_data,
        depth: ::std::os::raw::c_int,
        active: ::std::os::raw::c_int,
    ) -> TracyCZoneCtx;
    #[must_use]
    pub fn ___tracy_emit_zone_begin_alloc(
        srcloc: u64,
        active: ::std::os::raw::c_int,
    ) -> TracyCZoneCtx;
    #[must_use]
    pub fn ___tracy_emit_zone_begin_alloc_callstack(
        srcloc: u64,
        depth: ::std::os::raw::c_int,
        active: ::std::os::raw::c_int,
    ) -> TracyCZoneCtx;
    pub fn ___tracy_emit_zone_end(ctx: TracyCZoneCtx);
    pub fn ___tracy_emit_zone_text(
        ctx: TracyCZoneCtx,
        txt: *const ::std::os::raw::c_char,
        size: usize,
    );
    pub fn ___tracy_emit_zone_name(
        ctx: TracyCZoneCtx,
        txt: *const ::std::os::raw::c_char,
        size: usize,
    );
    pub fn ___tracy_emit_zone_color(ctx: TracyCZoneCtx, color: u32);
    pub fn ___tracy_emit_zone_value(ctx: TracyCZoneCtx, value: u64);
    pub fn ___tracy_emit_gpu_zone_begin(arg1: ___tracy_gpu_zone_begin_data);
    pub fn ___tracy_emit_gpu_zone_begin_callstack(arg1: ___tracy_gpu_zone_begin_callstack_data);
    pub fn ___tracy_emit_gpu_zone_begin_alloc(arg1: ___tracy_gpu_zone_begin_data);
    pub fn ___tracy_emit_gpu_zone_begin_alloc_callstack(
        arg1: ___tracy_gpu_zone_begin_callstack_data,
    );
    pub fn ___tracy_emit_gpu_zone_end(data: ___tracy_gpu_zone_end_data);
    pub fn ___tracy_emit_gpu_time(arg1: ___tracy_gpu_time_data);
    pub fn ___tracy_emit_gpu_new_context(arg1: ___tracy_gpu_new_context_data);
    pub fn ___tracy_emit_gpu_context_name(arg1: ___tracy_gpu_context_name_data);
    pub fn ___tracy_emit_gpu_calibration(arg1: ___tracy_gpu_calibration_data);
    pub fn ___tracy_emit_gpu_zone_begin_serial(arg1: ___tracy_gpu_zone_begin_data);
    pub fn ___tracy_emit_gpu_zone_begin_callstack_serial(
        arg1: ___tracy_gpu_zone_begin_callstack_data,
    );
    pub fn ___tracy_emit_gpu_zone_begin_alloc_serial(arg1: ___tracy_gpu_zone_begin_data);
    pub fn ___tracy_emit_gpu_zone_begin_alloc_callstack_serial(
        arg1: ___tracy_gpu_zone_begin_callstack_data,
    );
    pub fn ___tracy_emit_gpu_zone_end_serial(data: ___tracy_gpu_zone_end_data);
    pub fn ___tracy_emit_gpu_time_serial(arg1: ___tracy_gpu_time_data);
    pub fn ___tracy_emit_gpu_new_context_serial(arg1: ___tracy_gpu_new_context_data);
    pub fn ___tracy_emit_gpu_context_name_serial(arg1: ___tracy_gpu_context_name_data);
    pub fn ___tracy_emit_gpu_calibration_serial(arg1: ___tracy_gpu_calibration_data);
    pub fn ___tracy_connected() -> ::std::os::raw::c_int;
    pub fn ___tracy_emit_memory_alloc(
        ptr: *const ::std::os::raw::c_void,
        size: usize,
        secure: ::std::os::raw::c_int,
    );
    pub fn ___tracy_emit_memory_alloc_callstack(
        ptr: *const ::std::os::raw::c_void,
        size: usize,
        depth: ::std::os::raw::c_int,
        secure: ::std::os::raw::c_int,
    );
    pub fn ___tracy_emit_memory_free(
        ptr: *const ::std::os::raw::c_void,
        secure: ::std::os::raw::c_int,
    );
    pub fn ___tracy_emit_memory_free_callstack(
        ptr: *const ::std::os::raw::c_void,
        depth: ::std::os::raw::c_int,
        secure: ::std::os::raw::c_int,
    );
    pub fn ___tracy_emit_memory_alloc_named(
        ptr: *const ::std::os::raw::c_void,
        size: usize,
        secure: ::std::os::raw::c_int,
        name: *const ::std::os::raw::c_char,
    );
    pub fn ___tracy_emit_memory_alloc_callstack_named(
        ptr: *const ::std::os::raw::c_void,
        size: usize,
        depth: ::std::os::raw::c_int,
        secure: ::std::os::raw::c_int,
        name: *const ::std::os::raw::c_char,
    );
    pub fn ___tracy_emit_memory_free_named(
        ptr: *const ::std::os::raw::c_void,
        secure: ::std::os::raw::c_int,
        name: *const ::std::os::raw::c_char,
    );
    pub fn ___tracy_emit_memory_free_callstack_named(
        ptr: *const ::std::os::raw::c_void,
        depth: ::std::os::raw::c_int,
        secure: ::std::os::raw::c_int,
        name: *const ::std::os::raw::c_char,
    );
    pub fn ___tracy_emit_message(
        txt: *const ::std::os::raw::c_char,
        size: usize,
        callstack: ::std::os::raw::c_int,
    );
    pub fn ___tracy_emit_messageL(
        txt: *const ::std::os::raw::c_char,
        callstack: ::std::os::raw::c_int,
    );
    pub fn ___tracy_emit_messageC(
        txt: *const ::std::os::raw::c_char,
        size: usize,
        color: u32,
        callstack: ::std::os::raw::c_int,
    );
    pub fn ___tracy_emit_messageLC(
        txt: *const ::std::os::raw::c_char,
        color: u32,
        callstack: ::std::os::raw::c_int,
    );
    pub fn ___tracy_emit_frame_mark(name: *const ::std::os::raw::c_char);
    pub fn ___tracy_emit_frame_mark_start(name: *const ::std::os::raw::c_char);
    pub fn ___tracy_emit_frame_mark_end(name: *const ::std::os::raw::c_char);
    pub fn ___tracy_emit_frame_image(
        image: *const ::std::os::raw::c_void,
        w: u16,
        h: u16,
        offset: u8,
        flip: ::std::os::raw::c_int,
    );
    pub fn ___tracy_emit_plot(name: *const ::std::os::raw::c_char, val: f64);
    pub fn ___tracy_emit_plot_float(name: *const ::std::os::raw::c_char, val: f32);
    pub fn ___tracy_emit_plot_int(name: *const ::std::os::raw::c_char, val: i64);
    pub fn ___tracy_emit_plot_config(
        name: *const ::std::os::raw::c_char,
        type_: ::std::os::raw::c_int,
        step: ::std::os::raw::c_int,
        fill: ::std::os::raw::c_int,
        color: u32,
    );
    pub fn ___tracy_emit_message_appinfo(txt: *const ::std::os::raw::c_char, size: usize);
}
